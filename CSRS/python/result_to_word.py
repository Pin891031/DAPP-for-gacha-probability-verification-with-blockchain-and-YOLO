#===============================================================================================
import glob
from collections import Counter
import math
import os
import time
#===============================================================================================
file_paths = glob.glob(r'C:\CSRS\yoloGPU1\result/*.txt')                  #使用glob模組找到所有符合條件的txt檔案
all_first_numbers = []                                                                          #建立一個空的列表來存放所有檔案中的第一個數字 
output_folder = r'C:\CSRS\yoloGPU1\wordTxt'

def get_name(num):
    return names_dict.get(num, str(num))

#===============================================================================================
#定義名字對應的字典
names_dict = {
      0: '1Star', 1: '2Star', 2: '3Star', 3: '日和', 4: '怜', 5: '禊', 6: '胡桃', 7: '依里', 8: '鈴莓', 9: '優花梨', 
     10: '碧',11: '美咲', 12: '步未', 13: '莉瑪', 14: '茉莉', 15: '茜里', 16: '宮子', 17: '雪', 18: '七七香', 19: '美里', 
     20: '鈴奈',21: '香織', 22: '美美', 23: '綾音', 24: '鈴', 25: '惠理子', 26: '忍', 27: '真陽', 28: '栞', 29: '千歌', 
     30: '空花',31: '珠希', 32: '美冬', 33: '深月', 34: '紡希', 35: '純(聖誕節)', 36: '杏奈', 37: '真步', 38: '璃乃', 39: '初音', 
     40: '霞',41: '伊緒', 42: '咲戀', 43: '望', 44: '妮諾', 45: '秋乃', 46: '鏡華', 47: '智', 48: '真琴', 49: '伊莉亞', 
     50: '純',51: '靜流', 52: '莫妮卡', 53: '流夏', 54: '吉塔', 55: '亞里莎', 56: '雪菲', 57: '嘉夜', 58: '祈梨', 59: '安', 
     60: '古蕾婭',61: '空花(大江戶)', 62: '妮諾(大江戶)', 63: '碧(插班生)', 64: '克蘿依', 65: '琪愛兒', 66: '優妮', 67: '美美(萬聖節)', 68: '露娜',69: '伊莉亞(聖誕節)', 
     70: '霞(魔法少女)', 71: '鈴(遊俠)', 72: '真陽(遊俠)', 73: '璃乃(奇幻)', 74: '七七香(夏日)', 75: '純(夏日)',76: '茜里(天使)', 77: '依里(天使)', 78: '伶(萬聖節)', 79: '莫妮卡(魔法少女)',
     80: '智(魔法少女)', 81: '咲戀(聖誕節)', 82: '霞(夏日)',83: '真琴(灰姑娘)', 84: '真步(灰姑娘)', 85: '克蘿依(聖學祭)', 86: '琪愛兒(聖學祭)', 87: '優妮(聖學祭)', 88: '祈梨(時空旅者)', 89: '嘉夜(時空旅者)',
     90: '碧(工作服)', 91: '美冬(工作服)', 92: '靜流(夏日)', 93: '千歌(夏日)', 94: '深月(大江戶)', 95: '雪(大江戶)', 96: '鈴奈(萬聖節)', 97: '伊緒(黑暗)',98: '空花(黑暗)', 99: '璃乃(聖誕節)', 
    100: '胡桃(舞台)', 101: '美咲(舞台)', 102: '祈梨(怪盜)', 103: '杏奈(海盜)', 104: '忍(海盜)', 105: '優花梨(露營)',106: '班比', 107: '優依(夏日)', 108: '鏡華(夏日)', 109: '真步(探險家)', 
    110: '綾音(探險家)', 111: '七七香(萬聖節)', 112: '茉莉(狂野)', 113: '矛依未',114: '帆稀', 115: '拉比林斯達', 116: '似似花', 117: '克莉絲提娜', 118: '蘭法', 119: '美空', 
    120: '愛梅斯', 121: '日和(公主)', 122: '優依(公主)',123: '伶(公主)', 124: '貪吃佩可(公主)', 125: '可可蘿(公主)', 126: '凱留(公主)', 127: '初音＆栞', 128: '禊＆美美＆鏡華', 129: '秋乃＆咲戀', 
    130: '安＆古蕾婭',131: '貪吃佩可(夏日)', 132: '鈴莓(夏日)', 133: '凱留(夏日)', 134: '珠希(夏日)', 135: '忍(萬聖節)', 136: '美咲(萬聖節)', 137: '千歌(聖誕節)', 138: '綾音(聖誕節)',139: '日和(新年)', 
    140: '優衣(新年)', 141: '靜流(情人節)', 142: '鈴奈(夏日)', 143: '咲戀(夏日)', 144: '真琴(夏日)', 145: '真步(夏日)', 146: '鏡華(萬聖節)',147: '克莉絲提娜(聖誕節)', 148: '貪吃佩可(新年)', 149: '可可蘿(新年)', 
    150: '凱留(新年)', 151: '流夏(夏日)', 152: '初音(夏日)', 153: '紡希(萬聖節)', 154: '秋乃(聖誕節)',155: '似似花(新年)', 156: '可可蘿(祭服)', 157: '惠理子(夏日)', 158: '望(夏日)', 159: '香織(萬聖節)', 
    160: '宮子(聖誕節)', 161: '雪菲(新年)', 162: '伊莉亞(新年)',163: '克蕾琪塔', 164: '貪吃佩可(超載)', 165: '凱留(超載)', 166: '步未(怪盜)', 167: '靜流(黑暗)', 168: '伶(夏日)', 169: '美美(夏日)', 
    170: '涅婭', 171: '智(萬聖節)',172: '克莉絲提娜(狂野)', 173: '茜里(聖誕節)', 174: '帆稀(新年)', 175: '美里(新年)', 176: '望(解放者)', 177: '矛依未(解放者)',
}

#===============================================================================================
#逐一處理每個檔案
for file_path in file_paths:
    #開啟檔案
    all_first_numbers = [] 
    
    with open(file_path, 'r') as file:
        #逐行讀取檔案內容
        lines = file.readlines()

    #建立一個空的列表來存放當前檔案中每一行的第一個數字
    first_numbers = []

    #逐行擷取第一個數字
    for line in lines:
        #將每一行按空格拆分成列表
        values = line.strip().split()
        
        if len(values) > 0:
            try:
                #第一個數字是列表中的第一個元素，將其轉換為整數並加入列表
                first_numbers.append(int(values[0]))
            except ValueError:
                #若轉換失敗，可能是空行或不是數字開頭的行，可以忽略
                pass

    #將當前檔案中的第一個數字加入all_first_numbers列表
    all_first_numbers.extend(first_numbers)

    number_counts = Counter(all_first_numbers)                                                      #使用Counter計算所有檔案中第一個數字的出現次數 
    sorted_numbers = sorted(number_counts.items(), key=lambda x: x[0])                              #按照數字的大小進行排序
    sorted_name_numbers = [(names_dict.get(num, str(num)), count) for num, count in sorted_numbers] #將數字轉換為對應的名字  

#分類計算數字出現次數

    #counts_0_to_2 = sum([count for num, count in sorted_numbers if 0 <= num <= 2]          #1~3星出現的次數   
    counts_3_to_13 = sum([count for num, count in sorted_numbers if 3 <= num <= 13])        #1星的總數
    counts_14_to_34 = sum([count for num, count in sorted_numbers if 14 <= num <= 34])      #2星的總數
    counts_35_to_177 = sum([count for num, count in sorted_numbers if 35 <= num <= 177])    #3星的總數
    counts_all = counts_3_to_13 + counts_14_to_34 + counts_35_to_177

#轉換成%數
    one_star = "{:.1f}%".format(((counts_3_to_13) / (counts_all)) * 100)                 #1星出現的機率
    two_star = "{:.1f}%".format(((counts_14_to_34) / (counts_all)) * 100)                #2星出現的機率
    three_star = "{:.1f}%".format(((counts_35_to_177) / (counts_all)) * 100)             #3星出現的機率

#輸出統計結果到txt檔
    original_filename = os.path.basename(file_path)
    output_file = os.path.join(output_folder, f"{original_filename}")

    if not os.path.exists(output_folder):
        os.makedirs(output_folder)
#output_file = "抽卡的結果_1.txt"
#output_file = "統計結果_all.txt"

#將各項數據印入txt檔(10連抽)

    with open(output_file, 'a', encoding='utf-8') as f:
        f.write(f"==========統計==========\n")
        f.write(f"總抽數： {counts_all}\n")    
        f.write(f"\n1星機率： {one_star}\n")            
        f.write(f"2星機率： {two_star}\n")            
        f.write(f"3星機率： {three_star}\n")
        f.write(f"========================\n")  
        f.write(f"1Star 出現了  {counts_3_to_13} 次\n")            
        f.write(f"2Star 出現了  {counts_14_to_34} 次\n")             
        f.write(f"3Star 出現了  {counts_35_to_177} 次\n") 

        for name, count in sorted_name_numbers:
            f.write(f"{name} 出現了 {count} 次\n")
               
    print("統計結果已儲存到統計結果.txt檔案中。")

#=============================================================================================== 